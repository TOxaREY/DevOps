backend:
  deployment:
    metadata:
      labels:
        appKubernetesIoPartOf: momo-store
    replicas: 1
    revisionHistoryLimit: 12
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 20%
    image: image
    imagePullPolicy: IfNotPresent
    containerPort: 8080
    annotations:
      prometheusIoPath: /metrics
      prometheusIoPort: "8081"
      prometheusIoScrape: "true"
    livenessProbe:
      httpGet:
        path: /health
        port: 8081
      initialDelaySeconds: 15
      periodSeconds: 30
      timeoutSeconds: 2
      failureThreshold: 6
    imagePullSecrets:
      name: docker-config-secret-backend
  secrets:
    docker:
      name: docker-config-secret-backend
      json: token
      type: kubernetes.io/dockerconfigjson
  service:
    type: ClusterIP
    ports:
      port: 8080
      protocol: TCP
      targetPort: 8081     

frontend:
  deployment:
    metadata:
      labels:
        appKubernetesIoPartOf: momo-store
    replicas: 1
    revisionHistoryLimit: 12
    strategy:
      type: Recreate
    image: image
    containerPort: 8080
    volumeMounts:
      name: nginx-conf-vol
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
    imagePullSecrets:
      name: docker-config-secret-frontend      
  configMap:
    name: nginx-conf
    listenPort: 8080
    rootPath: /usr/share/nginx/html
    locationApi: ~ ^/(?:products|categories|orders|metrics|auth|whoami)
    proxyPass: http://backend:8080
  ingress:
    ingressClassName: nginx
    host: toxarey.ru
    paths:
      path: /
      pathType: Prefix
      backend:
        service:
          port:
            number: 8080  
  secrets:
    docker:
      name: docker-config-secret-frontend
      json: token
      type: kubernetes.io/dockerconfigjson
  service:
    type: ClusterIP
    ports:
      port: 8080
      protocol: TCP
      targetPort: 8080
