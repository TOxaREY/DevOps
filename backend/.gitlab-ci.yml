include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  IMAGE_BACKEND: /builds/$NAMESPACE/momo-store-diploma/momo-backend:$VERSION

stages:
  - test
  - build
  - release
  - delivery
  - deploy

unit-test-backend:
  stage: test
  rules:
    - changes:
      - backend/**/*
  image: golang:latest
  cache:
    paths:
      - .cache
  script:
    - mkdir -p .cache
    - export GOPATH="$CI_PROJECT_DIR/.cache"
    - cd backend
    - go test -v ./...
  allow_failure: true   

sonarqube-test-backend:
  stage: test
  rules:
    - changes:
      - backend/**/*
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - cd backend
    - sonar-scanner 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}
      -Dsonar.projectName=${SONAR_PROJECT_NAME_BACKEND}
  allow_failure: true

build:
  stage: build
  rules:
    - changes:
      - backend/**/*     
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/backend"
      --dockerfile "${CI_PROJECT_DIR}/backend/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}/momo-backend:$CI_COMMIT_SHA"
      --tar-path $IMAGE_BACKEND.tar
      --cache=true
    - gzip -9 < $IMAGE_BACKEND.tar > $IMAGE_BACKEND.tgz
  artifacts:
    paths:
    - $IMAGE_BACKEND.tgz
 
release:
  stage: release
  rules:
    - changes:
      - backend/**/*
  variables:
    GIT_STRATEGY: none
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  cache: [ ]
  before_script:
    - crane auth login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - crane tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA $VERSION

delivery:
  stage: delivery
  image: alpine/curl:8.1.2
  script:
    - curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD $NEXUS_URL_BACKEND --upload-file $IMAGE_BACKEND.tgz

deploy:
  stage: deploy
  trigger:
    include:
      - local: "/momo-store-chart/.gitlab-ci.yml"
  when: manual
